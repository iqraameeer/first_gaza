import 'package:graphql_flutter/graphql_flutter.dart';

class ApiServices {
  final GraphQLClient client;

  ApiServices({required this.client});

  Future<Map<String, dynamic>?> fetchUserData() async {
    final QueryOptions options = QueryOptions(
      document: gql("""
        query SuccessUserResponse {
          find {
            ... on SuccessUserResponse {
              success
              error
              message
              data {
                _id
                weekBefore
                IsDelivered
                createdAt
              }
            }
          }
        }
      """),
    );

    final result = await client.query(options);

    if (!result.hasException && result.data != null) {
      return result.data!['find']['data'];
    } else {
      // You can handle errors here by checking `result.exception`
      return null;
    }
  }
}
